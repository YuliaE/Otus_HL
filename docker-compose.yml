volumes:
    pgdata:
    pgdataRep1:
    pgdataRep2:
    healthcheck-volume:
services:
  backend:
    container_name: backend
    environment:
      DB_HOST: "pg"
      DB_PORT: 5432
      DB_USER: "user"
      DB_PASSWORD: "user"
      DB_NAME: "otus_db"
    build:
      context: backend
    ports:
      - 3000:3000
    volumes:
      - .:/usr/src/app
    command: go run ./main.go -b 0.0.0.0
    networks:
      - otus_net
  master:  
    container_name: "${COMPOSE_PROJECT_NAME:-citus}_master"
    image: "citusdata/citus:12.1.3"
    ports: ["${COORDINATOR_EXTERNAL_PORT:-5432}:5432"]
    labels: ["com.citusdata.role=Master"]
    environment: &AUTH
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "user"
      PGUSER: "user"
      PGPASSWORD: "user"
      POSTGRES_HOST_AUTH_METHOD: "${POSTGRES_HOST_AUTH_METHOD:-trust}"
    volumes:
       - ./Postgres:/docker-entrypoint-initdb.d # Инициализация таблиц
    networks:
       - otus_net
  worker1:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}_worker1"
    image: "citusdata/citus:12.1.6"
    labels: ["com.citusdata.role=Worker"]
    depends_on: [manager]
    environment: *AUTH
    command: "/wait-for-manager.sh"
    volumes:
      - healthcheck-volume:/healthcheck
    networks:
      - otus_net
  worker2:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}_worker2"
    image: "citusdata/citus:12.1.6"
    labels: ["com.citusdata.role=Worker"]
    depends_on: [manager]
    environment: *AUTH
    command: "/wait-for-manager.sh"
    volumes:
      - healthcheck-volume:/healthcheck
    networks:
      - otus_net
  manager:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}_manager"
    image: "citusdata/membership-manager:0.3.0"
    volumes:
      - "${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock"
      - healthcheck-volume:/healthcheck
    depends_on: [master]
    environment: *AUTH
    networks:
       - otus_net

  load_csv:   
    build: ./LoadCSV   
    depends_on: [master]
    networks:
      - otus_net

  proxy:
    image: nginx
    volumes:
      - type: bind
        source: ./proxy/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    ports:
      - 8080:80
    depends_on: 
      - backend
    networks:
      - otus_net

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pg-ad
    environment: 
      PGADMIN_DEFAULT_EMAIL: "user@domain.com"
      PGADMIN_DEFAULT_PASSWORD: "1234"
    ports: 
      - "8888:80"
    networks:
      - otus_net       

networks:
  otus_net:
    driver: bridge
